{"version":3,"sources":["store/store.js","UsersPage/Person.js","UsersPage/Users.js","Pagination/Pagination.js","UsersPage/UsersPage.js","api/users.js","UsersPage/index.js","App.js","index.js"],"names":["getUsers","state","users","userStore","createStore","action","type","Object","objectSpread2","Person","_ref","user","react_default","a","createElement","keys","map","item","Users","usersData","perPage","currentPage","start","end","length","className","index","UsersPage_Person","Pagination","total","changePage","buttons","Math","ceil","handlerChangePage","event","newPage","target","textContent","onClick","Array","fill","button","concat","cn","selectButton","UsersPage","setUsers","_useState","useState","_useState2","slicedToArray","changeCurrentPage","regenerator_default","async","_context","prev","next","t0","awrap","fetch","then","response","json","t1","sent","stop","Fragment","UsersPage_Users","src_Pagination_Pagination","connect","App","src_UsersPage","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.47a03f10.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\n// action types\nconst SET_USERS = 'GET_USERS';\n\n// action creators\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users,\n});\n\n// selectors\nexport const getUsers = state => state.users;\n\nconst initialState = {\n  users: [],\n};\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n    default:\n      return state;\n  }\n};\n\nconst userStore = createStore(userReducer, initialState);\n\nexport default userStore;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nconst Person = ({ user }) => (\n  <tr>\n    {Object.keys(user).map(item => (\n      <td>{user[item]}</td>\n    ))}\n  </tr>\n);\n\nPerson.propTypes = { user: PropsTypes.objectOf.isRequired };\n\nexport default Person;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport Person from './Person';\n\nconst Users = ({ usersData, perPage, currentPage }) => {\n  const start = perPage * currentPage - (perPage - 1);\n  const end = perPage * currentPage >= usersData.length\n    ? usersData.length\n    : perPage * currentPage;\n\n  return (\n    <table\n      className=\"table\"\n    >\n      <thead className=\"table__head\">\n        {Object.keys(usersData[0]).map(item => (\n          <th>{item}</th>\n        ))}\n      </thead>\n      <tbody className=\"table__body\">\n        {usersData.map((user, index) => (\n          (index + 1 >= start && index + 1 <= end)\n            ? <Person user={user} />\n            : ''\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nUsers.propTypes = {\n  usersData: PropsTypes.arrayOf.isRequired,\n  perPage: PropsTypes.number.isRequired,\n  currentPage: PropsTypes.number.isRequired,\n};\n\nexport default Users;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropsTypes from 'prop-types';\n\nconst Pagination = ({ total, currentPage, perPage, changePage }) => {\n  const buttons = Math.ceil(total / perPage);\n\n  const handlerChangePage = (event) => {\n    const newPage = event.target.textContent;\n\n    switch (newPage) {\n      case 'Next':\n        changePage(currentPage + 1 > buttons ? buttons : currentPage + 1);\n        break;\n      case 'Prev':\n        changePage(currentPage - 1 < 1 ? 1 : currentPage - 1);\n        break;\n      default:\n        changePage(+newPage);\n    }\n  };\n\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"pagination__button\"\n        type=\"button\"\n        onClick={handlerChangePage}\n      >\n        Prev\n      </button>\n      {Array(buttons).fill('').map((button, index) => (\n        <button\n          type=\"button\"\n          className={`pagination__button\n          ${cn({ selectButton: index + 1 === currentPage })}`}\n          onClick={handlerChangePage}\n        >\n          {index + 1}\n        </button>\n      ))}\n      <button\n        type=\"button\"\n        onClick={handlerChangePage}\n        className=\"pagination__button\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  total: PropsTypes.number.isRequired,\n  currentPage: PropsTypes.number.isRequired,\n  perPage: PropsTypes.number.isRequired,\n  changePage: PropsTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport PropsTypes from 'prop-types';\nimport { usersFromServer } from '../api/users';\n\nimport Users from './Users';\nimport Pagination from '../Pagination/Pagination';\n\nconst UsersPage = ({ users, setUsers }) => {\n  const getUser = async() => {\n    setUsers(await usersFromServer());\n  };\n\n  const [currentPage, changeCurrentPage] = useState(1);\n\n  return (\n    <div>\n      {users.length === 0\n        ? (\n          <button\n            type=\"button\"\n            onClick={getUser}\n            className=\"load__button\"\n          >\n            Load Users\n          </button>\n        )\n        : (\n          <>\n            <Users\n              usersData={users.users}\n              currentPage={currentPage}\n              perPage={5}\n            />\n            <Pagination\n              total={users.users.length}\n              currentPage={currentPage}\n              perPage={5}\n              changePage={changeCurrentPage}\n            />\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nUsersPage.propTypes = {\n  users: PropsTypes.objectOf.isRequired,\n  setUsers: PropsTypes.func.isRequired,\n};\n\nexport default UsersPage;\n","const API_URL = './users.json';\n\nexport const usersFromServer = () => (\n  fetch(API_URL)\n    .then(response => response.json())\n);\n","import { connect } from 'react-redux';\nimport { getUsers, setUsers } from '../store/store';\n\nimport UsersPage from './UsersPage';\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n});\n\nexport default connect(mapStateToProps, { setUsers })(UsersPage);\n","import React from 'react';\nimport UsersPage from './UsersPage/index';\nimport './style.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <UsersPage />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}